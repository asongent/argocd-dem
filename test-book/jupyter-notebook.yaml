apiVersion: v1
kind: Namespace
metadata:
  name: dev
spec: {}
status: {}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    storageclass.kubernetes.io/is-default-class: "false"
  name: standard-gp2
  namespace: jlab
provisioner: docker.io/hostpath #localhost
parameters:
  type: gp2
reclaimPolicy: Retain
allowVolumeExpansion: true
mountOptions:
  - debug
volumeBindingMode: Immediate

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jupyterlab-pvc
  namespace: dev
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: gp2 #standard-gp2-retain

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyter-notebook
  namespace: dev
  labels:
    name: jupyter-notebook
spec:
  replicas: 3
  selector:
    matchLabels:
      name: jupyter-notebook
  template:
    metadata:
      labels:
        name: jupyter-notebook
    spec:
      securityContext:
        runAsUser: 0
        fsGroup: 0
      containers:
        - name: jupyter-notebook
          image: jupyter/datascience-notebook:latest
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8888
          command:
            - /bin/bash
            - -c
            - |
              start.sh jupyter lab --LabApp.token='password' --LabApp.ip='0.0.0.0' --LabApp.allow_root=True
          volumeMounts:
            - name: jupyterlab-data
              mountPath: /home/jovyan
          resources:
            requests:
              memory: 500Mi
              cpu: 250m
      restartPolicy: Always
      volumes:
      - name: jupyterlab-data
        persistentVolumeClaim:
          claimName: jupyterlab-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: jupyter-notebook-service
  namespace: dev
  labels:
    name: jupyter-notebook-service
spec:
  type: LoadBalancer
  ports:
    - port: 800
      targetPort: 8888
      protocol: TCP
      name: http
  selector:
    name: jupyter-notebook